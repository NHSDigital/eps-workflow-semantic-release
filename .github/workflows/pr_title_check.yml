name: PR Title Check

on:
  workflow_call:

jobs:
  pr_title_format_check:
    runs-on: ubuntu-22.04
    steps:
      - name: Check PR Title is Prefixed with Change Type
        id: check_prefix
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[ "$PR_TITLE" =~ ^(Fix|Update|New|Breaking|Docs|Build|Upgrade|Chore):.*$ ]]; then
            echo "PR title is prefixed with change type."
          else
            echo "PR title is not prefixed with change type."
            echo "Please prefix your PR title with a change type (Fix, Update, New, Breaking, Docs, Build, Upgrade, Chore)."
            echo "See the contributing guide for more details:"
            echo "https://github.com/NHSDigital/eps-workflow-semantic-release/blob/main/CONTRIBUTING.md"
            exit 1
          fi

      - name: Check PR Title contains Ticket/Dependabot Reference
        id: check_ticket_reference
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[ "$PR_TITLE" =~ ^.*:.*\[([A-Z]+-[0-9]+|dependabot)\].*-.*$ ]]; then
            echo "PR title contains ticket or dependabot reference."
          else
            echo "PR title does not contain ticket or dependabot reference."
            echo "Please ensure PR title contains a ticket (eg. 'Fix: [AEA-####] - ...', or 'Chore: [dependabot] - ...')."
            exit 1
          fi

      - name: Extract Ticket Reference
        id: extract_ticket_reference
        if: steps.check_ticket_reference.outcome == 'success'
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[ "$PR_TITLE" =~ ^.*:.*\[([A-Z]+-[0-9]+|dependabot)\].*-.*$ ]]; then
            TICKET_REF="${BASH_REMATCH[1]}"
            echo "Extracted ticket reference: $TICKET_REF"
            echo "TICKET_REF=$TICKET_REF" > "$GITHUB_OUTPUT"
          else
            echo "No ticket reference found."
            exit 1
          fi

      - name: Comment on PR with Jira Link
        if: steps.check_ticket_reference.outcome == 'success' && steps.extract_ticket_reference.outputs.TICKET_REF != 'dependabot'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TICKET_REF: ${{ steps.extract_ticket_reference.outputs.TICKET_REF }}
        with:
          message: |
            This PR is linked to a ticket in an NHS Digital JIRA Project. Here's a handy link to the ticket:
            # [${{ env.TICKET_REF }}](https://nhsd-jira.digital.nhs.uk/browse/${{ env.TICKET_REF }})
          comment-tag: pr-link

      - name: Comment on PR for dependabot
        if: steps.check_ticket_reference.outcome == 'success' && steps.extract_ticket_reference.outputs.TICKET_REF == 'dependabot'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            This PR is raised by Dependabot to update a dependency.
          comment-tag: pr-link

      - name: Comment on PR for bad format
        if: steps.check_prefix.outcome != 'success' || steps.check_ticket_reference.outcome != 'success'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            The PR title does not conform to the required format.
            Please ensure your PR title is prefixed with a change type (Fix, Update, New, Breaking, Docs, Build, Upgrade, Chore)
            and contains a ticket reference (eg. 'Fix: [AEA-####] - ...', or 'Chore: [dependabot] - ...').
            See the contributing guide for more details:
            https://github.com/NHSDigital/eps-workflow-semantic-release/blob/main/CONTRIBUTING.md
          comment-tag: pr-link
